language: go
go_import_path: github.com/ethereum/go-ethereum
sudo: false
jobs:
  allow_failures:
    - stage: build
      os: osx
      env:
        - azure-osx

  include:
    - stage: build
      if: type = push
      os: linux
      dist: noble
      sudo: required
      go: 1.22.x
      env:
        - azure-linux
      git:
        submodules: false # avoid cloning ethereum/tests
      addons:
        apt:
          packages:
            - gcc-multilib
      script:
        - echo -e "\n$(ld -v)" && echo -e "\n$(gcc -v)\n" && which go && go version
        - go run build/ci.go install -dlgo && mv build/bin/geth build/bin/geth-amd64
        - go run build/ci.go install -dlgo -arch 386 && mv build/bin/geth build/bin/geth-386

        # Switch over GCC to cross compilation (breaks 386, hence why do it here only)
        - sudo -E apt-get -yq --no-install-suggests --no-install-recommends --force-yes install gcc-arm-linux-gnueabi libc6-dev-armel-cross gcc-arm-linux-gnueabihf libc6-dev-armhf-cross gcc-aarch64-linux-gnu libc6-dev-arm64-cross
        - sudo ln -s /usr/include/asm-generic /usr/include/asm

        - GOARM=5 go run build/ci.go install -dlgo -arch arm -cc arm-linux-gnueabi-gcc && mv build/bin/geth build/bin/geth-arm5
        - GOARM=6 go run build/ci.go install -dlgo -arch arm -cc arm-linux-gnueabi-gcc && mv build/bin/geth build/bin/geth-arm6
        - GOARM=7 go run build/ci.go install -dlgo -arch arm -cc arm-linux-gnueabihf-gcc && mv build/bin/geth build/bin/geth-arm7
        - go run build/ci.go install -dlgo -arch arm64 -cc aarch64-linux-gnu-gcc && mv build/bin/geth build/bin/geth-arm64

deploy:
  provider: releases
  api_key: $GIT_TOKEN
  file:
    - "build/bin/geth-amd64"
    - "build/bin/geth-386"
    - "build/bin/geth-arm5"
    - "build/bin/geth-arm6"
    - "build/bin/geth-arm7"
    - "build/bin/geth-arm64"
  skip_cleanup: true
  on:
    tags: true
